Index: src/UserInterface/UserInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UserInterface;\n//Userinterface\n     //\nimport Registrering.Konkurrencesvømmer;\nimport Registrering.Medlem;\n\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Objects;\nimport java.util.Scanner;\n\npublic class UserInterface {\n    private List<Medlem> medlemmer;\n\n    public UserInterface() {\n        this.medlemmer = new ArrayList<>();\n    }\n\n    public void start() {\n        Scanner scanner = new Scanner(System.in);\n\n        while (true) {\n            System.out.println(\"1. Registering af medlem\");\n            System.out.println(\"2. Prisliste\");\n            System.out.println(\"3. Restance\");\n            System.out.println(\"4. Samlet kontigent\");\n            System.out.println(\"5. Luk\");\n            System.out.println(\"Vælg en af mulighederne\");\n            int valg = Integer.parseInt(scanner.nextLine());\n\n\n            switch (valg) {\n                case 1:\n                    registeremedlem(scanner);\n                    break;\n\n                case 2:\n                    visPrisliste();\n                    break;\n\n                case 3:\n                    visMedlemmerMedRestance();\n                    break;\n\n                case 4:\n                    beregnSamletKontigent();\n                    break;\n\n                case 5:\n                    System.out.println(\"Program lukkes\");\n                    return;\n\n                default:\n                    System.out.println(\"Ugyldigt valgt. Prøv igen\");\n            }\n        }\n    }\n\n    //lav en metode der registrerer medlem() / Medlems registering af nye medlemmer via input\n    public void registeremedlem(Scanner scanner) {\n\n        System.out.println(\"Indtast navn:\");\n        String navn = scanner.nextLine();\n\n        System.out.println(\"Indtast alder\");\n        int alder = Integer.parseInt(scanner.nextLine());\n\n        System.out.println(\"Indtast køn\");\n        String køn = scanner.nextLine();\n\n        System.out.println(\"Indtast tlf-nr\");\n        int tlfnr = Integer.parseInt(scanner.nextLine());\n\n        System.out.println(\"Indtast CPR-nummer\");\n        String cprnr = scanner.nextLine();\n\n        System.out.println(\"Indtast adresse\");\n        String adresse = scanner.nextLine();\n\n        System.out.println(\"Indtast medlemstype (aktiv/passiv)\");\n        String medlemstype = scanner.nextLine().trim().toLowerCase();\n        if(medlemstype.isEmpty()) {\n            System.out.println(\"medlem ikke aktiv\");\n        }\n         else{\n            System.out.println(\"medlem er aktiv\");\n        }\n         \n        System.out.println(\"Har medlemmet restance? (Ja/Nej):\");\n        String restanceSvar = scanner.nextLine();\n        boolean harRestance = restanceSvar.equalsIgnoreCase(\"Ja\");\n\n        System.out.println(\"Er du konkurrencesvømmer (Ja/Nej)\");\n        String svar = scanner.nextLine();\n        boolean ErKonkurrenceSvømmer = svar.equalsIgnoreCase(\"Ja\");\n\n\n        if (ErKonkurrenceSvømmer) {\n            System.out.println(\"Medlem er konkurrencesvømmer\");\n        } else {\n            System.out.println(\"Medlem er ikke konkurrencesvømmer\");\n        }\n\n\n        String svømmehold = \"\";\n        String svømmedeciplin = \"\";\n\n\n        if (ErKonkurrenceSvømmer) {\n\n\n            System.out.println(\"Indtast svømmehold\");\n            svømmehold = scanner.nextLine();\n\n        System.out.println(\"Indtast svømmedeciplin\");\n        String svømmedeciplin = scanner.nextLine();\n\n        System.out.println(\"Har medlemmet restance? (Ja/Nej):\");\n        String restanceSvar = scanner.nextLine();\n        boolean harRestance = restanceSvar.equalsIgnoreCase(\"Ja\");\n\n\n            Medlem medlem = new Medlem();\n            medlem.setNavn(navn);\n            medlem.setAlder(alder);\n            medlem.setKøn(køn);\n            medlem.setTlfnr(tlfnr);\n            medlem.setCprnr(cprnr);\n            medlem.setAdresse(adresse);\n            medlem.setMedlemstype(medlemstype);\n            medlem.setSvømmehold(svømmehold);\n            medlem.setSvømmedeciplin(svømmedeciplin);\n            medlem.setHarRestance(harRestance);\n\n            medlemmer.add(medlem);\n            System.out.println(\"Medlem registreret: + \" + medlem.getNavn());\n        }\n    }\n        public void visPrisliste () {\n            if (medlemmer.isEmpty()) {\n                System.out.println(\"ingen medlemmer endnu\");\n                return;\n            }\n            System.out.println(\"Prisliste for medlemmer:\");\n            for (Medlem medlem : medlemmer) {\n                String ekstrainfo = \"\";\n                if (medlem instanceof Konkurrencesvømmer){\n                    Konkurrencesvømmer konkurrencesvømmer = (Konkurrencesvømmer) medlem;\n                    ekstrainfo = \", Svømmehold \" + konkurrencesvømmer.getSvømmehold() +\n                            \", Svømmedisciplin:\" + konkurrencesvømmer.getSvømmedeciplin();\n                    \n                }\n                \n                System.out.println(\"Navn: \" + medlem.getNavn() + \", Pris: \" + medlem.beregnPris() + \"kr.\" + ekstrainfo);\n            }\n        }\n\n        public void visMedlemmerMedRestance () {\n            if (medlemmer.isEmpty()) {\n                System.out.println(\"Ingen medlemmer registreret endnu.\");\n                return;\n            }\n\n            System.out.println(\"Medlemmer med restance:\");\n            boolean findesRestance = false;\n\n            for (Medlem medlem : medlemmer) {\n                if (medlem.isHarRestance()) {\n                    System.out.println(\"Navn: \" + medlem.getNavn() + \", CPR: \" + medlem.getCprnr() + ekstraInfo);\n                    findesRestance = true;\n                }\n            }\n\n\n            if (!findesRestance) {\n                System.out.println(\"Ingen medlemmer har restance.\");\n            }\n        }\n        public void beregnSamletKontigent () {\n            if (medlemmer.isEmpty()) {\n                System.out.println(\"Ingen medlemmer registreret endnu.\");\n                return;\n            }\n            double samletKontigent = 0.0;\n            for (Medlem medlem : medlemmer) {\n                samletKontigent += medlem.beregnPris();\n            }\n            System.out.println(\"Den samlet kontigent for alle medlemmer er: \" + samletKontigent + \" Kr.\");\n        }          }\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/UserInterface/UserInterface.java b/src/UserInterface/UserInterface.java
--- a/src/UserInterface/UserInterface.java	(revision 2f79d4d850b0c71197ce7bfda4f69ad43457640a)
+++ b/src/UserInterface/UserInterface.java	(date 1734100107171)
@@ -112,12 +112,17 @@
             System.out.println("Indtast svømmehold");
             svømmehold = scanner.nextLine();
 
-        System.out.println("Indtast svømmedeciplin");
-        String svømmedeciplin = scanner.nextLine();
+            System.out.println("Indtast svømmedeciplin");
+            svømmedeciplin = scanner.nextLine();
+
+            Konkurrencesvømmer konkurrencesvømmer = new Konkurrencesvømmer(
+                    navn, alder, køn, tlfnr, cprnr, adresse, medlemstype, svømmehold, svømmedeciplin);
+            konkurrencesvømmer.setErKonkurrenceSvømmer(true);
+            medlemmer.add(konkurrencesvømmer);
 
-        System.out.println("Har medlemmet restance? (Ja/Nej):");
-        String restanceSvar = scanner.nextLine();
-        boolean harRestance = restanceSvar.equalsIgnoreCase("Ja");
+            System.out.println(String.format("Konkurrencesvømmer registeret: ", konkurrencesvømmer.getNavn()));
+
+        } else {
 
 
             Medlem medlem = new Medlem();
Index: src/Registrering/Konkurrencesvømmer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Registrering;\n//SUBCLASS til medlem\n//\nimport java.util.ArrayList;\n\npublic class Konkurrencesvømmer extends Medlem{\n    private String svømmehold;\n    private ArrayList<String>svømmedecipliner;\n\n    public Konkurrencesvømmer(String navn, int alder, String køn, int tlfnr, String cprnr,\n                              String adresse,String medlemstype, String svømmehold, String svømmedeciplin) {\n        super(navn, alder, køn); //kalder på superclass konstruktør\n        this.svømmehold = svømmehold;\n        this.svømmedecipliner = new ArrayList<>();\n\n        svømmedecipliner.add(\"Butterfly\"); //Default\n        svømmedecipliner.add(\"Crawl\");\n        svømmedecipliner.add(\"Rygcrawl\");\n        svømmedecipliner.add(\"Bryst\");\n\n\n    }\n    public String getsvømmehold() {\n        return svømmehold;\n    }\n    public void setsvømmehold(String svømmehold) {\n        this.svømmehold= svømmehold;\n    }\n    public ArrayList<String>getSvømmedecipliner() {\n        return svømmedecipliner;\n\n    }\n    @Override\n    public void displayInfo() {\n        super.displayInfo(); // kalder på superklasse metode\n        System.out.println(\"Svømmehold: \" + svømmehold);\n        System.out.println(\"Svømmedecipliner: \" + svømmedecipliner);\n}\n\n\n    }\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Registrering/Konkurrencesvømmer.java b/src/Registrering/Konkurrencesvømmer.java
--- a/src/Registrering/Konkurrencesvømmer.java	(revision 2f79d4d850b0c71197ce7bfda4f69ad43457640a)
+++ b/src/Registrering/Konkurrencesvømmer.java	(date 1734100107198)
@@ -3,42 +3,59 @@
 //
 import java.util.ArrayList;
 
-public class Konkurrencesvømmer extends Medlem{
+public class Konkurrencesvømmer extends Medlem {
     private String svømmehold;
-    private ArrayList<String>svømmedecipliner;
+    private ArrayList<String> svømmedecipliner;
+    private boolean erKonkurrenceSvømmer;
 
     public Konkurrencesvømmer(String navn, int alder, String køn, int tlfnr, String cprnr,
-                              String adresse,String medlemstype, String svømmehold, String svømmedeciplin) {
+                              String adresse, String medlemstype, String svømmehold, String svømmedeciplin) {
         super(navn, alder, køn); //kalder på superclass konstruktør
         this.svømmehold = svømmehold;
         this.svømmedecipliner = new ArrayList<>();
+        this.erKonkurrenceSvømmer = true;
+
 
         svømmedecipliner.add("Butterfly"); //Default
         svømmedecipliner.add("Crawl");
         svømmedecipliner.add("Rygcrawl");
         svømmedecipliner.add("Bryst");
 
+        svømmedecipliner.add(svømmedeciplin);
+
 
     }
+
     public String getsvømmehold() {
         return svømmehold;
     }
+
     public void setsvømmehold(String svømmehold) {
-        this.svømmehold= svømmehold;
+        this.svømmehold = svømmehold;
     }
-    public ArrayList<String>getSvømmedecipliner() {
+
+    public ArrayList<String> getSvømmedecipliner() {
         return svømmedecipliner;
 
     }
+
+    public boolean isErKonkurrenceSvømmer() {
+        return erKonkurrenceSvømmer;
+    }
+
+    public void setErKonkurrenceSvømmer(boolean erKonkurrenceSvømmer) {
+        this.erKonkurrenceSvømmer = erKonkurrenceSvømmer;
+    }
+
+
+
     @Override
     public void displayInfo() {
         super.displayInfo(); // kalder på superklasse metode
         System.out.println("Svømmehold: " + svømmehold);
         System.out.println("Svømmedecipliner: " + svømmedecipliner);
-}
-
-
-    }
+    }
+}
 
 
 
Index: src/Registrering/Medlem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\n//SUPERCLASS medlem!\npackage Registrering;\n\n\npublic class Medlem {\n\n    private String navn;\n    private int alder;\n    private String køn;\n    private int tlfnr;\n    private String cprnr;\n    private String adresse;\n    private String medlemstype; //Aktiv - passiv\n    private String svømmehold;\n    private String svømmedeciplin;\n\n    //paramariseret konstuktør\n    public Medlem() {\n        this.navn = navn;\n        this.alder = alder;\n        this.køn = køn;\n        this.tlfnr = tlfnr;\n        this.cprnr = cprnr;\n        this.adresse = adresse;\n        this.medlemstype = medlemstype;\n        this.svømmehold = svømmehold;\n        this.svømmedeciplin = svømmedeciplin;\n    } //getter og setter metode\n\n    public Medlem(String navn, int alder, String køn) {\n    }\n\n    public String getNavn() {\n        return navn;\n    }\n    public void setNavn(String navn) {\n        this.navn = navn;\n    }\n    public int getAlder() {\n        return alder;\n    }\n    public void setAlder(int alder) {\n        this.alder = alder;\n    }\n    public String getKøn() {\n        return køn;\n    }\n    public void setKøn(String køn) {\n        this.køn = køn;\n    }\n    public int getTlfnr()  {\n        return tlfnr;\n    }\n    public void setTlfnr (int tlfnr) {\n        this.tlfnr = tlfnr;\n\n    }\n    public String getCprnr()  {\n        return cprnr;\n    }\n    public void setCprnr (String cprnr) {\n        this.cprnr = cprnr;\n    }\n    public String getAdresse() {\n        return adresse;\n    }\n\n    public void setAdresse(String adresse) {\n        this.adresse = adresse;\n    }\n\n    public String getMedlemstype() {\n        return medlemstype;\n    }\n\n    public void setMedlemstype(String medlemstype) {\n        this.medlemstype = medlemstype;\n    }\n\n    public String getSvømmehold() {\n        return svømmehold;\n    }\n\n    public void setSvømmehold(String svømmehold) {\n        this.svømmehold = svømmehold;\n    }\n\n    public String getSvømmedeciplin() {\n        return svømmedeciplin;\n    }\n\n    public void setSvømmedeciplin(String svømmedeciplin){\n        this.svømmedeciplin = svømmedeciplin;\n    }\n    //display medleminfo\n    public void displayInfo() {\n        System.out.println(\"navn: \" + navn + \"alder: \" + alder + \"køn \" + køn );\n    }\n\n\n    // Metode til at beregne pris\n    public double beregnPris() {\n        double pris = 0.0;\n        if (medlemstype.equalsIgnoreCase(\"passiv\")) {\n            return 500;\n        } else if (alder < 18) {\n            return 1000;\n        } else if (alder >= 60) {\n            return (1600 * 0.75);\n        } else {\n            return 1600;\n        }\n\n    }\n\n\n//Restance metode\n    private boolean harRestance; // Ny attribut\n\n    // Getter og setter for restance\n    public boolean isHarRestance() {\n        return harRestance;\n    }\n\n    public void setHarRestance(boolean harRestance) {\n        this.harRestance = harRestance;\n\n\n}\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Registrering/Medlem.java b/src/Registrering/Medlem.java
--- a/src/Registrering/Medlem.java	(revision 2f79d4d850b0c71197ce7bfda4f69ad43457640a)
+++ b/src/Registrering/Medlem.java	(date 1734100107192)
@@ -129,4 +129,16 @@
 
 }
 
+    public class Medlemm {
+        private boolean erKonkurrenceSvømmer;
+
+        public boolean isErKonkurrenceSvømmer() {
+            return erKonkurrenceSvømmer;
+        }
+
+        public void setErKonkurrenceSvømmer(boolean erKonkurrenceSvømmer) {
+            this.erKonkurrenceSvømmer = erKonkurrenceSvømmer;
+        }
+    }
+
 }
\ No newline at end of file
